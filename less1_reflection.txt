Q. How did viewing a diff between two versions of a file help you see the bug that was introduced?

--> Diff is an utility which enables us to see difference between two files. If our old code was working correctly, the problem with the new code comes from the edited lines.
Diff helps there basically.

Q. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

--> I can see the changes that have been done and act accordingly in order to change something that doesn't work.

Q. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

--> When adding a commit in git, I can add a phrase depicting what's changed. It is more flexible in the sense that we can record logical changes in the code. Google Docs is far more indiscriminate and can cause confusions.

Q. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

--> In systems like Git, we can treat projects easily because code is written in files interconnected to each other.

Q. How can you use the commands git log and git diff to view the history of files?

--> git log generates the commit history in reverse chronological order(the last commit is the first displayed). git diff can be used to compare what changed between any two commits by supplying the commit ids to it. the option --stat provides an overview of the insertion and deletions.

Q. How might using version control make you more confident to make changes that could break something?

--> I can always move between the commits using 'checkout' and see what went wrong, eventually correcting it.

Q. Now that you have your workspace set up, what do you want to try using Git for?

--> I will want git for the projects I will be doing from now on
